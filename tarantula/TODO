3 things to work on:
  invariants (hold off for now)
  test filtering
       -Read paper 66 and implement heuristics
       - Figure out intersection idea! (Taking intersection before doing tarantula
       equation)
       -Try to find a classifier that does well on one input and figure out
       why it does well on that input
       -Run feature selection on current features
       -Come up with more binary spectrum features
       -Use "ulam" distance and nonbinary spectrum features
  

-investigate idea of changing branch suspiciousness to be the max of its two branches.

How badly do the branch examples do?


-Try using intersection of statements executed by failing test cases
-use function optimizer
-implement tarantula in cpp
